// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartnersManagement.Data;

namespace PartnersManagement.Data.Migrations
{
    [DbContext(typeof(PartnerManagementDbContext))]
    [Migration("20211203180431_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Partner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order", "dbo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Order");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");

                    b.HasDiscriminator<string>("Discriminator").HasValue("OrderItem");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Partners.PartnerAOrder", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.Order");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PartnerAOrder");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Partners.PartnerBOrder", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.Order");

                    b.HasDiscriminator().HasValue("PartnerBOrder");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Partners.PartnerCOrder", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.Order");

                    b.Property<long>("ExposureId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelatedOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UDAC")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PartnerCOrder");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Partners.PartnerDOrder", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.Order");

                    b.HasDiscriminator().HasValue("PartnerDOrder");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.PaidSearchProductOrderItem", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.OrderItem");

                    b.HasDiscriminator().HasValue("PaidSearchProductOrderItem");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.WebSiteProductOrderItem", b =>
                {
                    b.HasBaseType("PartnersManagement.Orders.Entities.OrderItem");

                    b.HasDiscriminator().HasValue("WebSiteProductOrderItem");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.OrderItem", b =>
                {
                    b.HasOne("PartnersManagement.Orders.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.PaidSearchProductOrderItem", b =>
                {
                    b.OwnsOne("PartnersManagement.Orders.Entities.AdWordCampaign", "AdWordCampaign", b1 =>
                        {
                            b1.Property<long>("PaidSearchProductOrderItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CampaignAddressLine1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CampaignName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CampaignPostCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CampaignRadius")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DestinationURL")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LeadPhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Offer")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SMSPhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UniqueSellingPoint1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UniqueSellingPoint2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UniqueSellingPoint3")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaidSearchProductOrderItemId");

                            b1.ToTable("OrderItem");

                            b1.WithOwner()
                                .HasForeignKey("PaidSearchProductOrderItemId");
                        });

                    b.Navigation("AdWordCampaign");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.WebSiteProductOrderItem", b =>
                {
                    b.OwnsOne("PartnersManagement.Orders.Entities.WebsiteDetails", "WebsiteDetails", b1 =>
                        {
                            b1.Property<long>("WebSiteProductOrderItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("TemplateId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteAddressLine1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteAddressLine2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteBusinessName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteCity")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteEmail")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteMobile")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsitePhone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsitePostCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("WebsiteState")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WebSiteProductOrderItemId");

                            b1.ToTable("OrderItem");

                            b1.WithOwner()
                                .HasForeignKey("WebSiteProductOrderItemId");
                        });

                    b.Navigation("WebsiteDetails");
                });

            modelBuilder.Entity("PartnersManagement.Orders.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
